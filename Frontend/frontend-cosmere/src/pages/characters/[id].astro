---
import { fetchCharacters } from "@lib/utils/fetchCharacters";
import { fetchCharacterId } from "@lib/utils/fetchCharacterId";
import type { Character } from "@lib/utils/fetchCharacters";
import Header from "@components/Header.astro"
import SectionInf from "@components/SectionInf.astro"

export async function getStaticPaths() {
  let characters: Character[] = [];

  try {
    characters = await fetchCharacters();
  } catch (error) {
    console.error("Error al obtener personajes:", error);
  }

  if (!characters || characters.length === 0) {
    throw new Error("fetchCharacters() no devolvió datos");
  }

  return characters.map((character: Character) => {
    if (!character.id_Character) {
      throw new Error(`El personaje no tiene un ID: ${JSON.stringify(character)}`);
    }
    return { params: { id: character.id_Character.toString() } };
  });
}

const id = Number(Astro.params?.id);
if (isNaN(id)) {
  throw new Error(`ID inválido recibido: ${Astro.params?.id}`);
}

let characterObject: Character | null = null;

try {
    characterObject = await fetchCharacterId(id);
    console.log("CharacterID Encontrado!", characterObject?.id_Character ?? "No encontrado");
} catch (error) {
    console.error("Error fetching character:", error);
}


const nameCharacter = characterObject ? characterObject.name_Character : "Unknown Character";
const sagaCharacter = characterObject ? characterObject.saga : "Unknown SagaCharacter Character"; 

console.log("Character Object desde [id].astro ", characterObject);

---

<Header title={nameCharacter} description={sagaCharacter} />
{characterObject && <SectionInf character={characterObject} />}
